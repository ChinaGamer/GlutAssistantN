plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.0'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    ndkVersion ndkVersion

    productFlavors {
        develop {
            applicationId "com.develop.glutassistantn"
            manifestPlaceholders = [TD_CHANNEL_ID: "develop"]
        }
        build {
            applicationId "com.nano71.glutassistantn"
            manifestPlaceholders = [TD_CHANNEL_ID: "build"]
        }
    }

    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        multiDexEnabled true
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.nano71.glutassistantn"
        minSdkVersion flutter.minSdkVersion
        //noinspection EditedTargetSdkVersion
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        flavorDimensions "versionCode"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    namespace 'com.nano71.glutassistantn'

    lint {
        checkDependencies true
    }
    buildToolsVersion '34.0.0'
}

flutter {
    source '../..'
}

dependencies {
    implementation "com.google.android.material:material:1.12.0"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.0.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.0"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.window:window:1.3.0"

    // For Java-friendly APIs to register and unregister callbacks
    implementation "androidx.window:window-java:1.3.0"

    // For RxJava2 integration
    implementation "androidx.window:window-rxjava2:1.3.0"

    // For RxJava3 integration
    implementation "androidx.window:window-rxjava3:1.3.0"

    // For testing
    implementation "androidx.window:window-testing:1.3.0"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

}
configurations.configureEach {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'androidx.work') {
            details.useVersion '2.8.1'
        }
    }
}
